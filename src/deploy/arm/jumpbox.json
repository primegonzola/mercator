{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apiVersions": {
            "type": "object"
        },
        "uniqueNameFix": {
            "type": "string"
        },
        "subnetId": {
            "type": "string"
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "Admin username on all VMs."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password on all VMs."
            }
        },
        "osImageUri": {
            "type": "string"
        },
        "dataImageUri": {
            "type": "string"
        }
    },
    "variables": {
        "apiVersions": "[parameters('apiVersions')]",
        "uniqueNameFix": "[parameters('uniqueNameFix')]",
        "vmName": "[concat('jumpbox-vm-', variables('uniqueNameFix'))]",
        "ipName": "[concat('jumpbox-ip-', variables('uniqueNameFix'))]",
        "nicName": "[concat('jumpbox-nic-', variables('uniqueNameFix'))]",
        "nsgName": "[concat('jumpbox-nsg-', variables('uniqueNameFix'))]",
        "dskName": "[concat('jumpbox-dsk-', variables('uniqueNameFix'))]",
        "osImageName": "[concat('jumpbox-os-img-', variables('uniqueNameFix'))]",
        "subnetId": "[parameters('subnetId')]",
        "osImageUri": "[parameters('osImageUri')]",
        "dataImageUri": "[parameters('dataImageUri')]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/images",
            "apiVersion": "[variables('apiVersions').images]",
            "name": "[variables('osImageName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "storageProfile": {
                    "osDisk": {
                        "osType": "Linux",
                        "osState": "Generalized",
                        "blobUri": "[variables('osImageUri')]",
                        "caching": "ReadWrite",
                        "storageAccountType": "Standard_LRS"
                    }
                }
            }
        },        
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "apiVersion": "[variables('apiVersions').virtualMachines]",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_F1"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "[resourceId('Microsoft.Compute/images', variables('osImageName'))]"
                    },
                    "osDisk": {
                        "name": "[variables('dskName')]",
                        "createOption": "FromImage"
                    }
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/images/', variables('osImageName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "[variables('apiVersions').networkInterfaces]",
            "name": "[variables('nicName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('ipName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                },
                "virtualMachine": {
                    "id": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('ipName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "[variables('apiVersions').networkSecurityGroups]",
            "name": "[variables('nsgName')]",
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "[variables('apiVersions').publicIPAddresses]",
            "name": "[variables('ipName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "[variables('apiVersions').networkSecurityGroups]",
            "name": "[concat(variables('nsgName'), '/default_allow_ssh_name')]",
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ]
        }
    ]
}